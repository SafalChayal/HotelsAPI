// <auto-generated />
using System;
using BigAccessment1_HotelsAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BigAccessment1_HotelsAPI.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20230526100144_Migrations")]
    partial class Migrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BigAccessment1_HotelsAPI.Models.Hotel", b =>
                {
                    b.Property<int>("Hotel_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Amenities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hotel_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Information_Id")
                        .HasColumnType("int");

                    b.Property<int>("Location_Id")
                        .HasColumnType("int");

                    b.Property<int>("PriceRange_Id")
                        .HasColumnType("int");

                    b.HasKey("Hotel_Id");

                    b.HasIndex("Information_Id");

                    b.HasIndex("Location_Id");

                    b.HasIndex("PriceRange_Id");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("BigAccessment1_HotelsAPI.Models.Information", b =>
                {
                    b.Property<int>("Information_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2000);

                    b.Property<string>("Manager_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total_Room")
                        .HasColumnType("int");

                    b.HasKey("Information_Id");

                    b.ToTable("Informations");
                });

            modelBuilder.Entity("BigAccessment1_HotelsAPI.Models.Location", b =>
                {
                    b.Property<int>("Location_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(10000);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Location_Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("BigAccessment1_HotelsAPI.Models.PriceRange", b =>
                {
                    b.Property<int>("PriceRangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PriceRangeId"));

                    b.Property<string>("Range")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PriceRangeId");

                    b.ToTable("PriceRanges");
                });

            modelBuilder.Entity("BigAccessment1_HotelsAPI.Models.Reservation", b =>
                {
                    b.Property<int>("Reservation_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(3000);

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.Property<int?>("User_Id1")
                        .HasColumnType("int");

                    b.HasKey("Reservation_Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("User_Id");

                    b.HasIndex("User_Id1");

                    b.ToTable("Reversations");
                });

            modelBuilder.Entity("BigAccessment1_HotelsAPI.Models.Room", b =>
                {
                    b.Property<int>("Room_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1000);

                    b.Property<int>("Hotel_Id")
                        .HasColumnType("int");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<int>("Room_no")
                        .HasColumnType("int");

                    b.HasKey("Room_Id");

                    b.HasIndex("Hotel_Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("BigAccessment1_HotelsAPI.Models.User", b =>
                {
                    b.Property<int>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BigAccessment1_HotelsAPI.Models.Hotel", b =>
                {
                    b.HasOne("BigAccessment1_HotelsAPI.Models.Information", "Information")
                        .WithMany("Hotel")
                        .HasForeignKey("Information_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BigAccessment1_HotelsAPI.Models.Location", "Location")
                        .WithMany("Hotel")
                        .HasForeignKey("Location_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BigAccessment1_HotelsAPI.Models.PriceRange", "Pricerange")
                        .WithMany("Hotel")
                        .HasForeignKey("PriceRange_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Information");

                    b.Navigation("Location");

                    b.Navigation("Pricerange");
                });

            modelBuilder.Entity("BigAccessment1_HotelsAPI.Models.Reservation", b =>
                {
                    b.HasOne("BigAccessment1_HotelsAPI.Models.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BigAccessment1_HotelsAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BigAccessment1_HotelsAPI.Models.User", null)
                        .WithMany("Reservations")
                        .HasForeignKey("User_Id1");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BigAccessment1_HotelsAPI.Models.Room", b =>
                {
                    b.HasOne("BigAccessment1_HotelsAPI.Models.Hotel", "hotels")
                        .WithMany("Room")
                        .HasForeignKey("Hotel_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hotels");
                });

            modelBuilder.Entity("BigAccessment1_HotelsAPI.Models.Hotel", b =>
                {
                    b.Navigation("Room");
                });

            modelBuilder.Entity("BigAccessment1_HotelsAPI.Models.Information", b =>
                {
                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("BigAccessment1_HotelsAPI.Models.Location", b =>
                {
                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("BigAccessment1_HotelsAPI.Models.PriceRange", b =>
                {
                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("BigAccessment1_HotelsAPI.Models.Room", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("BigAccessment1_HotelsAPI.Models.User", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
